@page "/"
@inject HttpClient _httpClient;
<PageTitle>Recipes Home Page</PageTitle>
<RecipeSearch></RecipeSearch>
@if (_recipes == null)
{
    <div>Loading Recipes ...</div>
}
else
{
    <ViewSwithcher Items="_recipes">
        <CardTemplate Context="recipe">
            <RecipeCard recipe="recipe" OnSelectRecipe="OnSelectRecipeHandler"></RecipeCard>
        </CardTemplate>
        <TableHeaderTemplate>
            <th>
                Name
            </th>
            <th>
                Originality
            </th>
            <th>
                Price
            </th>
            <th>
                Time
            </th>
            <th>
                View
            </th>
        </TableHeaderTemplate>
        <TableRowTemplate Context="recipe">
            <td>
                @recipe.Name
            </td>
            <td>
                @recipe.Originality
            </td>
            <td>
                @recipe.Price
            </td>
            <td>
                @recipe.TimeInString
            </td>
            <td>
                <button class="btn btn-success" @onclick="@(()=> OnSelectRecipeHandler(recipe))">Select</button>
            </td>
        </TableRowTemplate>
    </ViewSwithcher>

    <RecipeDetail recipe="selectedRecipe"></RecipeDetail>
}

@code {
    public IEnumerable<Recipe> _recipes { get; set; }
    public Recipe selectedRecipe { get; set; }
    protected override async Task OnInitializedAsync()
    {
        try
        {
            _recipes = await _httpClient.GetFromJsonAsync<IEnumerable<Recipe>>("api/Recipe");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Badness->{ex.Message}");

        }
    }

    void OnSelectRecipeHandler(Recipe recipe)
    {
        selectedRecipe = recipe;

    }
}
